@model SistemaDeVentasV1.Models.AspNetUsers
@using SistemaDeVentasV1.Models;
@{
    ViewBag.Title = "Editar Usuarios ";
    ViewBag.TituloControlador = "USUARIOS";
    ViewBag.InfoPagina = "Informacion Actual del usuario";
    ViewBag.TituloVentana = "Datos del Usuario";
    ViewBag.FooterVentana = "Es posible que no se permita la eliminacion de estos registros para conservar la integridad de la base de datos";

    Layout = "~/Views/Shared/Plantilla1.cshtml";
    List<AspNetRoles> roles = new List<AspNetRoles>();
    if (ViewBag.Roles != null)
    {
        roles = (List<AspNetRoles>)ViewBag.Roles;
    }
}
<div class="row">
    <div class="col-md-12">
       
        <div class="col-md-6">
            @using (Html.BeginForm())
            {
                @Html.AntiForgeryToken()
                <center><h4>Informacion Actual</h4></center>
                <div class="form-horizontal">
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    @Html.HiddenFor(model => model.Id)

                    <div class="form-group">
                        @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control", @readonly = "true" } })
                            @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.PhoneNumber, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.PhoneNumber, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.PhoneNumber, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.Activo, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            <div class="checkbox">
                               @Html.EditorFor(model => model.Activo, new { htmlAttributes = new { @class = "form-control"} })
                                @Html.ValidationMessageFor(model => model.Activo, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.UserName, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.UserName, new { htmlAttributes = new { @class = "form-control", @readonly = "true" } })
                            @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.nombre, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.nombre, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.nombre, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.direccion, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.direccion, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.direccion, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.tel_casa, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.tel_casa, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.tel_casa, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-10">
                            <input type="submit" value="Actualizar Usuario" class="btn btn-primary" />
                        </div>
                    </div>
                </div>
            }
        </div>
        <div class="col-md-6">
            <center> <h4 class="h4">Agregar y Eliminar Roles</h4></center>
            <div class="form-group">
                <center> <label>Roles Actuales</label></center>
                @if(Model.AspNetRoles.Count==0)
                {
                    <div class="alert-warning"><label>No Hay roles actuales</label></div>
                }
                else
                {
                    foreach (var r in Model.AspNetRoles)
                    {
                        <div class="text text-red"> <center> @r.Name </center> </div> 
                    }
                }
             
            </div>
            <h4 class="h4">Seleccione el Rol a Agregar</h4>
            <form method="post" action="@Url.Action("AgregarRol","Usuarios")">
                <select class="selectpicker form-inline" title="AgregarRol" data-live-search="true" id="idRol" name="idRol" required>
                    <option></option>

                    @foreach (var r in roles)
                    {

                        <<option value="@r.Id" data-tokens="@r.Id @r.Name"> @r.Name </option>


                    }
                </select>
                <input type="hidden" name="idUser" id="idUser" value="@Model.Id" />
                <input type="submit" name="btnCargar" value="Agregar Rol" class="btn btn-primary form-inline" />
            </form>

            <h4 class="h4">Seleccione los roles a Eliminar</h4>
            <form method="post" action="@Url.Action("EliminarRol","Usuarios")" class="form inline">
                <select class="selectpicker form-inline" title="AgregarRol" data-live-search="true" id="idRol" name="idRol" required>
                    <option></option>

                    @foreach (var r in Model.AspNetRoles)
                    {

                        <option value="@r.Id" data-tokens="@r.Id @r.Name"> @r.Name </option>
                    }
                </select>
                <input type="hidden" name="idUser" id="idUser" value="@Model.Id" />
                <input type="submit" name="btnCargar" value="Eliminar Rol" class="btn btn-danger form-inline" />
            </form>

        </div>
    </div>
         
</div>

<div class="row">
    
    <a href="@Url.Action("Index","Usuarios")" class="btn btn-success">Regresar a la lista</a>
</div>